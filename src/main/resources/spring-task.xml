<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				        http://www.springframework.org/schema/task 
				        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<description>
		一.定时任务配置job有两种方式：
			1.org.springframework.scheduling.quartz.JobDetailFactoryBean:
			支持序列化，由于集群需要把定时任务信息写入数据库,所以集群选用此方式;
			2.org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean:
			不支持序列化
		二.cronTrigger对于misfiredTrigger的三种处理方式:(通过配置CronTrigger的misfireInstruction属性)
			1.MISFIRE_INSTRUCTION_IGNORE_MISFIRE_POLICY = -1 -- 以错过的第一个频率时间立刻开始执行,重做错过的所有频率周期后,
				当下一次触发频率发生时间大于当前时间后，再按照正常的Cron频率依次执行
			2.MISFIRE_INSTRUCTION_SMART_POLICY = 0(交由quartz动态处理)
				-- 1.如果是只执行一次的调度，使用MISFIRE_INSTRUCTION_FIRE_NOW
			    -- 2.如果是无限次的调度(repeatCount是无限的)，使用MISFIRE_INSTRUCTION_RESCHEDULE_NEXT_WITH_REMAINING_COUNT
				-- 3.否则，使用MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_EXISTING_REPEAT_COUNT
			3.MISFIRE_INSTRUCTION_FIRE_ONCE_NOW = 1 -- 以当前时间为触发频率立刻触发一次执行,然后按照Cron频率依次执行
			4.MISFIRE_INSTRUCTION_DO_NOTHING = 2 -- 不触发立即执行,等待下次Cron触发频率到达时刻开始按照Cron频率依次执行
		三.程序执行过程中出现中断恢复策略(设置JobDetail中的requestsRecovery)：
			1.true:恢复执行
			2.false:不恢复执行
	</description>

	<bean id="trigger1"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task1" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property> 
	</bean>
	
	<bean id="trigger2"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task2" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger3"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task3" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger4"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task4" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger5"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task5" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger6"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task6" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger7"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task7" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger8"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="true" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task8" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>
	<bean id="trigger9"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<property name="durability" value="true" />
				<property name="requestsRecovery" value="false" />
				<property name="jobClass">
					<value>com.andy.quartz.JobDetailBean</value>
				</property>
				<property name="jobDataAsMap">
					<map>
						<entry key="targetObject" value="demoTask" />
						<entry key="targetMethod" value="task9" />
					</map>
				</property>
			</bean>
		</property>
		<property name="cronExpression" value="0 30 10 * * ?" />
		<property name="misfireInstruction" value="2"></property>
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<property name="dataSource" ref="dataSource" />
		<property name="overwriteExistingJobs" value="true" />
		<!--注册到调度器仓库中-->
        <property name="exposeSchedulerInRepository" value="true" />
		<!-- 设置自动启动 -->
		<property name="autoStartup" value="true" />
		<property name="startupDelay" value="10" />
		<property name="applicationContextSchedulerContextKey" value="applicationContextKey" />
		<property name="configLocation" value="classpath:quartz.properties" />
		<property name="jobFactory">
            <bean class="com.andy.quartz.AutoWiringSpringBeanJobFactory" />
        </property>
        <property name="globalTriggerListeners">
        		<list>
        			<ref bean="customTriggerListener"/>
        		</list>
        </property>
		<property name="triggers">
			<list>
				<ref bean="trigger1" />
				<ref bean="trigger2" />
				<ref bean="trigger3" />
				<ref bean="trigger4" />
				<ref bean="trigger5" />
				<ref bean="trigger6" />
				<ref bean="trigger7" />
				<ref bean="trigger8" />
				<ref bean="trigger9" />
			</list>
		</property>
	</bean>
	<!--声明bean获取管理器,通过构造函数方式获取-->
    <bean id="constructorQuartzBeanManager" class="com.github.quartzweb.manager.bean.ConstructorQuartzBeanManager">
        <property name="priority" value="5" />
    </bean>
    <!--设置bean管理器,通过spring的applicationContext获取-->
    <bean id="springQuartzBeanManager" class="com.github.quartzweb.manager.bean.SpringQuartzBeanManager">
        <property name="priority" value="10" />
    </bean>
    
    <!--声明bean管理器门面,必须使用getInstance()初始化实例-->
    <bean id="quartzBeanManagerFacade" class="com.github.quartzweb.manager.bean.QuartzBeanManagerFacade"
          factory-method="getInstance">
        <!--设置管理器,根据优先级排序-->
        <property name="quartzBeanManagers">
            <list>
                <ref bean="springQuartzBeanManager"/>
                <ref bean="constructorQuartzBeanManager"/>
            </list>
        </property>
        <!--是否启用默认bean管理器-->
        <property name="useDefaultQuartzBeanManager" value="false"/>
    </bean>
</beans>